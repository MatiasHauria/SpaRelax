/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Persistencia.Conexion;
import Modelo.Tratamiento;
import static Vista.jfSpaRelax.tratamientoData;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
/**
 *
 * @author dannita
 */
public class jifGestionTratamientos extends javax.swing.JInternalFrame {
    private boolean aux = false;
    Connection conexion = null;
    private String regex = "^[a-zA-ZáéíóúÁÉÍÓÚñÑ,.\\s]+$";
    private String regex2 = "^[\\d.]+$";
    private DefaultTableModel modeloTabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    /**
     * Creates new form jifGestionTratamientos
     */
    public jifGestionTratamientos() {
        initComponents();
        this.conexion = Conexion.establecerConexion();
        if (this.conexion == null) {
            limpiarCampos();
            deshabilitarBotones();
            deshabilitarCampos();
            jTablaTratamientos.setEnabled(false);
            jTextFieldBusquedaId.setEnabled(false);
            jButtonActualizarLista.setEnabled(false);
        }
        cargarId();
        columns();
        rows();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxIds = new javax.swing.JComboBox<>();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldDetalle = new javax.swing.JTextField();
        jTextFieldDuracion = new javax.swing.JTextField();
        jTextFieldCosto = new javax.swing.JTextField();
        jComboBoxProductos = new javax.swing.JComboBox<>();
        jTextFieldProductos = new javax.swing.JTextField();
        jButtonActualizarTratamiento = new javax.swing.JButton();
        jButtonBorrarTratamiento = new javax.swing.JButton();
        jButtonCargarTratamiento = new javax.swing.JButton();
        jButtonTratamientoOn = new javax.swing.JButton();
        jButtonTratamientoOff = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldBusquedaId = new javax.swing.JTextField();
        jButtonActualizarLista = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaTratamientos = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Gestión de tratamientos");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 13)), "Ingreso de datos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel2.setText("Id tratamiento:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel4.setText("Detalle:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel5.setText("Costo:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel6.setText("Duración por hora:");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel7.setText("Productos:");

        jComboBoxIds.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBoxIds.setBorder(null);
        jComboBoxIds.setEnabled(false);

        jTextFieldNombre.setEnabled(false);

        jTextFieldDetalle.setEnabled(false);

        jTextFieldDuracion.setEnabled(false);

        jTextFieldCosto.setEnabled(false);

        jComboBoxProductos.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jComboBoxProductos.setBorder(null);
        jComboBoxProductos.setEnabled(false);

        jTextFieldProductos.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel7)
                                .addComponent(jLabel3))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBoxIds, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldDetalle)
                                .addComponent(jTextFieldNombre)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jTextFieldProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(7, 7, 7)
                                    .addComponent(jComboBoxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxIds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jButtonActualizarTratamiento.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonActualizarTratamiento.setText("Actualizar tratamiento");
        jButtonActualizarTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarTratamientoActionPerformed(evt);
            }
        });

        jButtonBorrarTratamiento.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonBorrarTratamiento.setText("Borrar tratamiento");
        jButtonBorrarTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarTratamientoActionPerformed(evt);
            }
        });

        jButtonCargarTratamiento.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonCargarTratamiento.setText("Cargar tratamiento");
        jButtonCargarTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarTratamientoActionPerformed(evt);
            }
        });

        jButtonTratamientoOn.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonTratamientoOn.setText("Habilitar tratamiento");
        jButtonTratamientoOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTratamientoOnActionPerformed(evt);
            }
        });

        jButtonTratamientoOff.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonTratamientoOff.setText("Deshabilitar tratamiento");
        jButtonTratamientoOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTratamientoOffActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabel8.setText("Buscar tratamiento por ID:");

        jTextFieldBusquedaId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBusquedaIdKeyReleased(evt);
            }
        });

        jButtonActualizarLista.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonActualizarLista.setText("Actualizar lista");
        jButtonActualizarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarListaActionPerformed(evt);
            }
        });

        jTablaTratamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablaTratamientos);

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel9.setText("Lista de tratamientos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(207, 207, 207))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCargarTratamiento)
                            .addComponent(jButtonActualizarTratamiento)
                            .addComponent(jButtonCancelar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonActualizarLista)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldBusquedaId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButtonTratamientoOn)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonTratamientoOff)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBorrarTratamiento))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel9)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButtonCargarTratamiento)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActualizarTratamiento)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelar)))
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonTratamientoOff)
                            .addComponent(jButtonTratamientoOn)
                            .addComponent(jButtonBorrarTratamiento))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldBusquedaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonActualizarLista)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCargarTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarTratamientoActionPerformed
        if (aux == false) {
            habilitarCampos();
            deshabilitarBotones();
            jComboBoxIds.setEnabled(false);
            jComboBoxProductos.setEnabled(false);
            jButtonCargarTratamiento.setEnabled(true);
            jButtonCancelar.setEnabled(true);
            aux = true;
            return;
        }

        if (aux == true) {
            if (!jTextFieldNombre.getText().matches(regex) || jTextFieldNombre.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Nombre'.");
                return;
            } else if (!jTextFieldDetalle.getText().matches(regex) || jTextFieldDetalle.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Detalle'.");
                return;
            } else if (!jTextFieldProductos.getText().matches(regex) || jTextFieldProductos.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Productos'.");
                return;
            } else if (!jTextFieldDuracion.getText().matches(regex2) || jTextFieldDuracion.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Duracion'.");
                return;
            } else if (!jTextFieldCosto.getText().matches(regex2) || jTextFieldCosto.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Costo'.");
                return;
            }

            List<String> productos = new ArrayList<>();
            productos.add(jTextFieldProductos.getText());
            tratamientoData.agregarTratamiento(new Tratamiento(jTextFieldNombre.getText(), jTextFieldDetalle.getText(), productos, Integer.parseInt(jTextFieldDuracion.getText()), Double.parseDouble(jTextFieldCosto.getText())));
            limpiarCampos();
            deshabilitarCampos();
            habilitarBotones();
            aux = false;
        }
    }//GEN-LAST:event_jButtonCargarTratamientoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        limpiarCampos();
        deshabilitarCampos();
        habilitarBotones();
        jButtonCancelar.setEnabled(false);
        if (aux == true) {
            aux = false;
        }
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonActualizarTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarTratamientoActionPerformed
        if (aux == false) {
            habilitarCampos();
            deshabilitarBotones();
            jButtonActualizarTratamiento.setEnabled(true);
            jButtonCancelar.setEnabled(true);
            aux = true;
            return;
        }
        
        if (aux == true) {
            if (!jTextFieldNombre.getText().matches(regex) || jTextFieldNombre.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Nombre'.");
                return;
            } else if (!jTextFieldDetalle.getText().matches(regex) || jTextFieldDetalle.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Detalle'.");
                return;
            } else if (!jTextFieldProductos.getText().matches(regex) || jTextFieldProductos.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Productos'.");
                return;
            } else if (!jTextFieldDuracion.getText().matches(regex2) || jTextFieldDuracion.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Duracion'.");
                return;
            } else if (!jTextFieldCosto.getText().matches(regex2) || jTextFieldCosto.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Costo'.");
                return;
            }
            int seleccionId = (int) jComboBoxIds.getSelectedItem();
            List<String> productos = new ArrayList<>();
            productos.add(jTextFieldProductos.getText());
            tratamientoData.actualizarTratamiento(seleccionId, jTextFieldNombre.getText(), jTextFieldDetalle.getText(), productos.toString(), Integer.parseInt(jTextFieldDuracion.getText()), Double.parseDouble(jTextFieldCosto.getText()));
            limpiarCampos();
            deshabilitarCampos();
            habilitarBotones();
            jButtonCancelar.setEnabled(false);
            aux = false;
        }
    }//GEN-LAST:event_jButtonActualizarTratamientoActionPerformed

    private void jTextFieldBusquedaIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusquedaIdKeyReleased
        rows();
    }//GEN-LAST:event_jTextFieldBusquedaIdKeyReleased

    private void jButtonActualizarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarListaActionPerformed
        rows();
    }//GEN-LAST:event_jButtonActualizarListaActionPerformed

    private void jButtonTratamientoOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTratamientoOnActionPerformed
        if (jTablaTratamientos.getSelectedRow() != -1) {
            int id = 0;
            Integer idTratamiento = (Integer) modeloTabla.getValueAt(jTablaTratamientos.getSelectedRow(), id);
            for (Tratamiento t : tratamientoData.mostrarTratamientos()) {
                if (idTratamiento == t.getIdTratamiento() && t.isActivo() == true) {
                    JOptionPane.showMessageDialog(this, "El tratamiento se encuentra activo.");
                    return;
                } else if (idTratamiento == t.getIdTratamiento() && t.isActivo() == false) {
                    tratamientoData.altaLogica(idTratamiento);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila antes de continuar.");
        }
        rows();
    }//GEN-LAST:event_jButtonTratamientoOnActionPerformed

    private void jButtonTratamientoOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTratamientoOffActionPerformed
        if (jTablaTratamientos.getSelectedRow() != -1) {
            int id = 0;
            Integer idTratamiento = (Integer) modeloTabla.getValueAt(jTablaTratamientos.getSelectedRow(), id);
            for (Tratamiento t : tratamientoData.mostrarTratamientos()) {
                if (idTratamiento == t.getIdTratamiento() && t.isActivo() == false) {
                    JOptionPane.showMessageDialog(this, "El tratamiento se encuentra inactivo.");
                    return;
                } else if (idTratamiento == t.getIdTratamiento() && t.isActivo() == true) {
                    tratamientoData.bajaLogica(idTratamiento);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila antes de continuar.");
        }
        rows();
    }//GEN-LAST:event_jButtonTratamientoOffActionPerformed

    private void jButtonBorrarTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarTratamientoActionPerformed
        if (jTablaTratamientos.getSelectedRow() != -1) {
            int id = 0;
            Integer idTratamiento = (Integer) modeloTabla.getValueAt(jTablaTratamientos.getSelectedRow(), id);
            int confirm = JOptionPane.showConfirmDialog(this, "¿Esta seguro de que desea borrar el tratamiento \nde la base de datos?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (confirm) {
                case JOptionPane.NO_OPTION:
                    return;
                case JOptionPane.YES_OPTION:
                    tratamientoData.borrarTratamiento(idTratamiento);
                    break;
                default:
                    return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila antes de continuar.");
        }
        rows();
    }//GEN-LAST:event_jButtonBorrarTratamientoActionPerformed

    private void deshabilitarCampos() {
        jComboBoxIds.setEnabled(false);
        jTextFieldNombre.setEnabled(false);
        jTextFieldDetalle.setEnabled(false);
        jTextFieldProductos.setEnabled(false);
        jComboBoxProductos.setEnabled(false);
        jTextFieldDuracion.setEnabled(false);
        jTextFieldCosto.setEnabled(false);
    }
    
    private void habilitarCampos() {
        jComboBoxIds.setEnabled(true);
        jTextFieldNombre.setEnabled(true);
        jTextFieldDetalle.setEnabled(true);
        jTextFieldProductos.setEnabled(true);
        jComboBoxProductos.setEnabled(true);
        jTextFieldDuracion.setEnabled(true);
        jTextFieldCosto.setEnabled(true);
    }
    
    private void limpiarCampos() {
        jTextFieldNombre.setText(null);
        jTextFieldDetalle.setText(null);
        jTextFieldProductos.setText(null);
        jTextFieldDuracion.setText(null);
        jTextFieldCosto.setText(null);
    }
    
    private void habilitarBotones() {
        jButtonCargarTratamiento.setEnabled(true);
        jButtonActualizarTratamiento.setEnabled(true);
        jButtonBorrarTratamiento.setEnabled(true);
        jButtonTratamientoOn.setEnabled(true);
        jButtonTratamientoOff.setEnabled(true);
    }
    
    private void deshabilitarBotones() {
        jButtonCargarTratamiento.setEnabled(false);
        jButtonActualizarTratamiento.setEnabled(false);
        jButtonBorrarTratamiento.setEnabled(false);
        jButtonTratamientoOn.setEnabled(false);
        jButtonTratamientoOff.setEnabled(false);
    }
    
    private void cargarId() {
        for (Tratamiento tratamiento : tratamientoData.mostrarTratamientos()) {
            jComboBoxIds.addItem(tratamiento.getIdTratamiento());
        }
    }
    
    private void columns() {
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Detalle");
        modeloTabla.addColumn("Productos");
        modeloTabla.addColumn("Duracion");
        modeloTabla.addColumn("Costo");
        modeloTabla.addColumn("Activo");
        jTablaTratamientos.setModel(modeloTabla);
    }
    
    private void rows() {
        String id = jTextFieldBusquedaId.getText();
        if (!id.matches(regex2) && !id.isBlank()) {
            JOptionPane.showMessageDialog(this, "No ingrese letras en el ID, solo digitos.");
            jTextFieldBusquedaId.setText(null);
            return;
        }
        modeloTabla.setRowCount(0);
        List<Tratamiento> listaTratamientos = new ArrayList<>(tratamientoData.mostrarTratamientos());
        for (Tratamiento trats : listaTratamientos) {
            String aux = String.valueOf(trats.getIdTratamiento());
            if (aux.contains(id) || id.isBlank()) {
                Object[] filas = {
                    trats.getIdTratamiento(), trats.getNombre(), trats.getDetalle(), trats.getProductos(), trats.getDuracion(), trats.getCosto(), (trats.isActivo() ? "Activo" : "Inactivo")
                };
                modeloTabla.addRow(filas);
            }
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizarLista;
    private javax.swing.JButton jButtonActualizarTratamiento;
    private javax.swing.JButton jButtonBorrarTratamiento;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCargarTratamiento;
    private javax.swing.JButton jButtonTratamientoOff;
    private javax.swing.JButton jButtonTratamientoOn;
    private javax.swing.JComboBox<Integer> jComboBoxIds;
    private javax.swing.JComboBox<Integer> jComboBoxProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaTratamientos;
    private javax.swing.JTextField jTextFieldBusquedaId;
    private javax.swing.JTextField jTextFieldCosto;
    private javax.swing.JTextField jTextFieldDetalle;
    private javax.swing.JTextField jTextFieldDuracion;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldProductos;
    // End of variables declaration//GEN-END:variables
}
